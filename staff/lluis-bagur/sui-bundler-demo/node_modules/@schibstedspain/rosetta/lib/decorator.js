'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _ = require('./');

var rosetta = function rosetta(i18n, languages) {
  return function (Target) {
    // Prevent context variables
    // https://github.com/rackt/react-router/issues/484#issuecomment-131066254

    var Rosetta = (function (_Target) {
      _inherits(Rosetta, _Target);

      _createClass(Rosetta, null, [{
        key: 'childContextTypes',
        get: function get() {
          var ctxt = Object.assign({}, _get(Object.getPrototypeOf(Rosetta), 'childContextTypes', this), {
            i18n: _react.PropTypes.object
          });

          return !languages ? ctxt : Object.assign({}, ctxt, {
            languages: _react.PropTypes.object
          });
        }
      }]);

      function Rosetta() {
        var _this = this;

        _classCallCheck(this, Rosetta);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _get(Object.getPrototypeOf(Rosetta.prototype), 'constructor', this).apply(this, args);

        this.forceComponentUpdate = function () {
          _this.forceUpdate();
        };

        i18n.on(_.CHANGE_TRANSLATION_EVENT, this.forceComponentUpdate);

        this.i18n = i18n;
      }

      _createClass(Rosetta, [{
        key: 'getChildContext',
        value: function getChildContext() {
          var ctxt = Object.assign({}, _get(Object.getPrototypeOf(Rosetta.prototype), 'getChildContext', this) && _get(Object.getPrototypeOf(Rosetta.prototype), 'getChildContext', this).call(this) || {}, { i18n: i18n });
          return !languages ? ctxt : Object.assign({}, ctxt, { languages: languages });
        }
      }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
          i18n.removeListener(_.CHANGE_TRANSLATION_EVENT, this.forceComponentUpdate);
        }
      }]);

      return Rosetta;
    })(Target);

    return Rosetta;
  };
};
exports.rosetta = rosetta;