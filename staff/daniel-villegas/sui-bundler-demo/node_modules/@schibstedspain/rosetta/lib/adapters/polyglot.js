'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _nodePolyglot = require('node-polyglot');

var _nodePolyglot2 = _interopRequireDefault(_nodePolyglot);

var PolyglotAdapter = (function () {
  function PolyglotAdapter() {
    _classCallCheck(this, PolyglotAdapter);

    this.polyglot = new _nodePolyglot2['default']();
  }

  _createClass(PolyglotAdapter, [{
    key: 'translate',
    value: function translate(key, values) {
      return this.polyglot.t(key, values);
    }
  }, {
    key: 'instance',
    get: function get() {
      return this.polyglot;
    }
  }, {
    key: 'locale',
    set: function set(locale) {
      return this.polyglot.locale(locale);
    },
    get: function get() {
      return this.polyglot.locale();
    }
  }, {
    key: 'translations',
    set: function set(translations) {
      this.polyglot.extend(translations);
    }
  }]);

  return PolyglotAdapter;
})();

exports['default'] = PolyglotAdapter;
module.exports = exports['default'];